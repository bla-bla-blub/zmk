/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define LOWER 1
#define UPPER 2
#define SYS 3
#define NUM 4


/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ,-----------------------------------,              ,-----------------------------------,
// |  =  |  1  |  2  |  3  |  4  |  5  |              |  6  |  7  |  8  |  9  |  0  |  -  |
// | TAB |  Q  |  W  |  E  |  R  |  T  |              |  Y  |  U  |  I  |  O  |  P  |  \  |
// |CAPS/NUM| A|  S  |  D  |  F  |  G  |-----,  ,-----|  H  |  J  |  K  |  L  |  ;  |  '  |
// | SFT |  Z  |  X  |  C  |  V  |  B  | DEL |  | ESC |  N  |  M  |  ,  |  .  |  /  | SFT |
// '-----------| LAL | GUI |LOWER| SPC | CTL |  | RET | BSPC|UPPER| PP | SYS/Mute |------'
//             '-----------------------------'  '-----------------------------'
            bindings = <
&kp EQUAL       &kp N1      &kp N2      &kp N3      &kp N4      &kp N5                               &kp N6      &kp N7      &kp N8      &kp N9      &kp N0      &kp MINUS
&kp TAB         &kp Q       &kp W       &kp E       &kp R       &kp T                                &kp Y       &kp U       &kp I       &kp O       &kp P       &kp BSLH
&lt NUM CAPS    &kp A       &kp S       &kp D       &kp F       &kp G                                &kp H       &kp J       &kp K       &kp L       &kp SEMI    &kp SQT
&kp LSHFT       &kp Z       &kp X       &kp C       &kp V       &kp B       &kp DEL     &kp ESC      &kp N       &kp M       &kp COMMA   &kp DOT     &kp FSLH    &kp RSHFT
                        &kp LALT    &kp LGUI    &mo LOWER   &kp SPACE   &kp LCTRL   &mt RALT RET &kp BSPC   &mo UPPER   &kp C_PP     &lt SYS C_MUTE
            >;
        };

        lower_layer {
// ,-----------------------------------,              ,-----------------------------------,
// | F12 | F1  | F2  | F3  | F4  | F5  |              |  F6 |  F7 |  F8 |  F9 | F10 | F11 |
// | PGUP| --- | PREV| up  | NEXT| --- |              |  ^  |  ~  |  *  |  â‚¬  | --- | F12 |
// | PGDN| Home| <-  | down| ->  | END |-----,  ,-----| --- |  %  |  $  |  &  | --- | --- |
// |  T  | --- | DELP| INS | DELN| --- |  T  |  |  T  | --- | --- | --- | --- | --- |  T  |
// '-----------|  T  |  T  |  T  |  T  |  T  |  |  T  |  T  | --- | --- | --- |-----------'
//             '-----------------------------'  '-----------------------------'
            bindings = <
&kp F12     &kp F1      &kp F2       &kp F3      &kp F4        &kp F5                          &kp F6      &kp F7      &kp F8      &kp F9      &kp F10     &kp F11
&kp PG_UP   &none       &kp LC(LEFT) &kp UP      &kp LC(RIGHT) &none                           &kp CARET   &kp TILDE   &kp ASTRK   &kp RC(N5)  &none       &kp F12
&kp PG_DN   &kp HOME    &kp LEFT     &kp DOWN    &kp RIGHT     &kp END                         &none       &kp PRCNT   &kp DOLLAR  &kp AMPS    &none       &none
&trans      &none       &kp LC(BSPC) &kp INS     &kp LC(DEL)   &none     &trans     &trans     &none       &none       &none       &none       &none   	   &trans
                        &trans       &trans      &trans        &trans    &trans     &trans     &trans      &none       &none       &none
            >;
        };

        upper_layer {
// ,-----------------------------------,              ,-----------------------------------,
// | --- |  F1 |  F2 |  F3 |  F4 |  F5 |              |  F6 |  F7 |  F8 |  F9 | F10 | F11 |
// | --- |  {  |  [  |  (  |  /  |  <  |              | --- | PREV|  UP | NEXT| PGUP| F12 |
// | --- |  }  |  ]  |  )  |  \  |  >  |-----,  ,-----| HOME| LEFT| DOWN|RIGHT| END | --- |
// |  T  |  ~  |  =  |  +  |  |  | --- |  T  |  |  T  | --- | DELP| INS | DELN| PGDN|  T  |
// '-----------|  T  |  T  | --- |  T  |  T  |  |  T  | NEXT|  T  | VOL-| VOL+|-----------'
//             '-----------------------------'  '-----------------------------'
            bindings = <
&none       &kp F1     	&kp F2      &kp F3      &kp F4      &kp F5                              &kp F6      &kp F7       &kp F8       &kp F9        &kp F10    &kp F11
&none       &kp LBRC    &kp LBKT    &kp LPAR    &kp FSLH    &kp LESS_THAN                       &none       &kp LC(LEFT) &kp UP       &kp LC(RIGHT) &kp PG_UP  &kp F12
&none       &kp RBRC    &kp RBKT    &kp RPAR    &kp BSLH    &kp GREATER_THAN                    &kp HOME    &kp LEFT     &kp DOWN     &kp RIGHT     &kp END    &none
&trans      &kp TILDE   &kp EQUAL   &kp PLUS    &kp PIPE    &none       &trans      &trans      &none       &kp LC(BSPC) &kp INS      &kp LC(DEL)   &kp PG_DN  &trans
                        &trans      &trans      &none       &trans      &trans      &none       &kp C_NEXT  &trans       &kp C_VOL_DN &kp C_VOL_UP
            >;
        };

        system_layer {
// ,-----------------------------------,              ,-----------------------------------,
// |BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |              | --- | --- | --- | --- | --- | --- |
// | --- | --- | --- | --- | --- | --- |              | --- | --- | --- | --- | --- | --- |
// | --- | --- | --- | --- | --- | --- |-----,  ,-----| --- | --- | --- | --- | --- | --- |
// | --- | --- | --- | --- | --- | --- |BOOT |  | RST | --- | --- | --- | --- | --- | --- |
// '-----------| --- | --- | --- | --- | BLE |  | USB | --- | --- |  T  | --- |-----------'
//             '-----------------------------'  '-----------------------------'
            bindings = < 
&bt BT_CLR	&bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4                        &none      	&none      	&none      	&none      	&none     	&none
&none		&none 		&none 		&none 		&none 		&none                                   &none       &none 		&none     	&none 		&none  		&none
&none       &none       &none  		&none    	&none		&none                                   &none    	&none    	&none    	&none   	&none     	&none
&none   	&none       &none 		&none 		&none 		&none     	&bootloader   &reset        &none       &none 		&none    	&none 		&none    	&none
                        &none      	&none       &none      	&none      	&out OUT_BLE  &out OUT_USB  &none       &none      	&none       &trans
            >;
        };

        numpad_layer {
// ,-----------------------------------,              ,-----------------------------------,
// | --- | --- | --- | --- | --- | --- |              | --- | num |  /  |  *  |  -  | --- |
// | --- | --- | --- | --- | --- | --- |              | --- |  7  |  8  |  9  |  +  | --- |
// |  T  | --- | --- | --- | --- | --- |-----,  ,-----| --- |  4  |  5  |  6  |  +  | --- |
// | --- | --- | --- | --- | --- | --- | --- |  | --- | --- |  1  |  2  |  3  |  +  | --- |
// '-----------| --- | --- | --- | --- | --- |  | ENT | --- |  0  |  ,  |  .  |-----------'
//             '-----------------------------'  '-----------------------------'
            bindings = < 
&none       &none       &none       &none       &none       &none                                   &none      	&kp KP_NLCK &kp KP_DIVIDE   &kp KP_MULTIPLY &kp KP_MINUS    &none
&none       &none       &none       &none       &none       &none                                   &none       &kp KP_N7   &kp KP_N8       &kp KP_N9       &kp KP_PLUS     &none
&trans      &none       &none       &none       &none       &none                                   &none    	&kp KP_N4   &kp KP_N5       &kp KP_N6       &kp KP_PLUS     &none
&none       &none       &none       &none       &none       &none     	&none         &none         &none       &kp KP_N1   &kp KP_N2       &kp KP_N3       &kp KP_PLUS     &none
                        &none      	&none       &none       &none      	&none         &kp KP_ENTER  &none       &kp KP_N0   &none           &trans
            >;
        };

    };
};